// <auto-generated />
using System;
using LoanAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen_U2_POO_CarlosPineda.Migrations
{
    [DbContext(typeof(ExamenU2Context))]
    partial class ExamenU2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanAPI.Database.Entities.AmortizationScheduleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("InstallmentAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("installment_amount");

                    b.Property<decimal>("InterestPaid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("interest_paid");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("loan_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<decimal>("PrincipalPaid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("principal_paid");

                    b.Property<decimal>("RemainingBalance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("remaining_balance");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("amortization_schedule", "dbo");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.LoanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<decimal>("CommissionRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("commission_rate");

                    b.Property<Guid?>("CustomerEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DisbursementDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("disbursement_date");

                    b.Property<DateTime>("FirstPaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_payment_date");

                    b.Property<Guid>("IdentityNumber")
                        .HasMaxLength(20)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("identity_number");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("interest_rate");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("loan_amount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int>("Term")
                        .HasColumnType("int")
                        .HasColumnName("term");

                    b.HasKey("Id");

                    b.HasIndex("CustomerEntityId");

                    b.ToTable("loans", "dbo");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.AmortizationScheduleEntity", b =>
                {
                    b.HasOne("LoanAPI.Database.Entities.LoanEntity", "Loan")
                        .WithMany("AmortizationSchedule")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.LoanEntity", b =>
                {
                    b.HasOne("LoanAPI.Database.Entities.CustomerEntity", null)
                        .WithMany("Loans")
                        .HasForeignKey("CustomerEntityId");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.CustomerEntity", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LoanAPI.Database.Entities.LoanEntity", b =>
                {
                    b.Navigation("AmortizationSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
